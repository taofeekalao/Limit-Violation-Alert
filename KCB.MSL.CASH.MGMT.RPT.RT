    SUBROUTINE KCB.MSL.CASH.MGMT.RPT.RT

    $INSERT I_COMMON
    $INSERT I_EQUATE
    $INSERT I_F.TELLER.ID
    $INSERT I_F.ACCOUNT
    $INSERT I_F.KCB.L.MSL.CASH.MGMT
    $INSERT I_F.KCB.MSL.LIMITS.PARAM
    $INSERT I_F.KCB.SYSTEM.PARAM

    GOSUB INITIALISE
    GOSUB PROCESS

    RETURN
*
INITIALISE:
*=========
    FN.KCB.L.MSL.CASH.MGMT = "F.KCB.L.MSL.CASH.MGMT"
    F.KCB.L.MSL.CASH.MGMT = ""
    CALL OPF(FN.KCB.L.MSL.CASH.MGMT, F.KCB.L.MSL.CASH.MGMT)

    FN.KCB.MSL.LIMITS.PARAM = "F.KCB.MSL.LIMITS.PARAM"
    F.KCB.MSL.LIMITS.PARAM = ""
    CALL OPF(FN.KCB.MSL.LIMITS.PARAM, F.KCB.MSL.LIMITS.PARAM)

    FN.ACCOUNT = "F.ACCOUNT"
    F.ACCOUNT = ""
    CALL OPF(FN.ACCOUNT, F.ACCOUNT)

    FN.CATEG.INT.ACCT = "F.CATEG.INT.ACCT"
    F.CATEG.INT.ACCT = ""
    CALL OPF(FN.CATEG.INT.ACCT, F.CATEG.INT.ACCT)

    FN.PARAM = "F.KCB.SYSTEM.PARAM"
    F.PARAM = ''
    CALL OPF(FN.PARAM,F.PARAM)

    RETURN
*
PROCESS:
*=======
    CALL F.READ(FN.KCB.MSL.LIMITS.PARAM, "PROD.CODE", R.MSL.LIMIT, F.KCB.MSL.LIMITS.PARAM, MSL.ERR)
    FOR KK = 1 TO DCOUNT(R.MSL.LIMIT<KCB.PKL.CASH.CATEG>, @VM)
        CATEG.ID = R.MSL.LIMIT<KCB.PKL.CASH.CATEG, KK>
        CALL F.READ(FN.CATEG.INT.ACCT, CATEG.ID, R.CATEG, F.CATEG.INT.ACCT, CATEG.ERR)
        ACCT.LIST<-1> = R.CATEG
    NEXT KK
    CNT = 0
    CNTER = COUNT(ACCT.LIST, @FM)
    LOOP
        CNT += 1
        REMOVE ACCT.ID FROM ACCT.LIST SETTING ACCT.POS
    WHILE ACCT.ID : ACCT.POS

        CRT ACCT.ID
        PRINT 'Processing ... ':CNT:' of ':CNTER
        CALL F.READ(FN.ACCOUNT, ACCT.ID, R.ACCT.DTLS, F.ACCOUNT, AC.ERR)
        TELLER.ID = ACCT.ID[9,4]
        BRANCH.ID = R.ACCT.DTLS<AC.ACCOUNT.OFFICER>:'.':TELLER.ID:'.':TODAY:'.':"ONLINE"
        AC.CCY   = R.ACCT.DTLS<AC.CURRENCY>

        CALL F.READ(FN.KCB.L.MSL.CASH.MGMT, BRANCH.ID, R.DATA.DTLS, F.KCB.L.MSL.CASH.MGMT, MGMT.ERR)
        ACCT.BAL = R.ACCT.DTLS<AC.ONLINE.CLEARED.BAL>
        IF ACCT.BAL = '' THEN
            ACCT.BAL = 0
        END

*Rate Conversion Variables
*=============================
        RATE     = ''
        MARKET   = ''
        LCY.AMT  = ''
        DIF.AMT  = ''
        DIF.RATE = ''

        LOCATE ACCT.ID IN R.DATA.DTLS<KCB.MSL.CASH.ACCT, 1> SETTING SEE.POS  THEN

            R.DATA.DTLS<KCB.MSL.CASH.AMT, SEE.POS> = ACCT.BAL
            IF (R.ACCT.DTLS<AC.CURRENCY> # LCCY) THEN
                CALL MIDDLE.RATE.CONV.CHECK(ACCT.BAL, AC.CCY, RATE, MARKET, LCY.AMT, DIF.AMT, DIF.RATE)
                LCY.AMT = RATE * ACCT.BAL
                R.DATA.DTLS<KCB.MSL.CASH.AMT.LCY, SEE.POS> = LCY.AMT
            END ELSE
                LCY.AMT = ACCT.BAL
                R.DATA.DTLS<KCB.MSL.CASH.AMT.LCY, SEE.POS> = LCY.AMT
            END

        END ELSE
            R.DATA.DTLS<KCB.MSL.CASH.ACCT, -1> = ACCT.ID
            R.DATA.DTLS<KCB.MSL.CASH.AMT, -1> = ACCT.BAL
            IF (R.ACCT.DTLS<AC.CURRENCY> # LCCY) THEN
                CALL MIDDLE.RATE.CONV.CHECK(ACCT.BAL, AC.CCY, RATE, MARKET, LCY.AMT, DIF.AMT, DIF.RATE)
                LCY.AMT = RATE * ACCT.BAL
                R.DATA.DTLS<KCB.MSL.CASH.AMT.LCY, -1> = LCY.AMT
            END ELSE
                LCY.AMT = ACCT.BAL
                R.DATA.DTLS<KCB.MSL.CASH.AMT.LCY, -1> = LCY.AMT
            END
        END

        R.DATA.DTLS<KCB.MSL.TOTAL.AMT.LCY> += LCY.AMT

        CALL F.WRITE(FN.KCB.L.MSL.CASH.MGMT, BRANCH.ID, R.DATA.DTLS)
        CALL JOURNAL.UPDATE(BRANCH.ID)
    REPEAT

    RETURN
END